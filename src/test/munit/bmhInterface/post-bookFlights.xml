<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="post-bookFlights.xml" />
		<munit:test name="post:\flights\bookFlights-unauthorisedError" doc:id="3ab14ddb-8142-4697-a470-931ff02bb384" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="cc506b69-88d5-4a34-98c5-09b8e807b952" >
				<munit:payload value='{&#10;    "username" : "8121134970",&#10;    "password" : "Apisero@13",&#10;    "flightID" : "1",&#10;    "seats" : "3"&#10;}' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="1c0df570-d353-4625-8ae5-e2c580e120d3" processor="b39-bmh-db-system:get-by-mobile">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get by mobile" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4f0252cf-eb0a-4179-9347-2c8bb4c53ad7" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="B39_BMH_DB_System_Config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="#[payload.password]" attributeName="password" />
					<munit-tools:with-attribute whereValue="#[payload.username]" attributeName="mobile" />
					<munit-tools:with-attribute whereValue="user" attributeName="target" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="B39-BMH-DB-SYSTEM:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\flights\bookFlights:application\json:b39-book-my-holiday-api-config" doc:id="64bb07fe-feda-42d7-9e55-ad98848fff3a" name="post:\flights\bookFlights:application\json:b39-book-my-holiday-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="d66e230d-91c0-4bb1-a6cd-307a3b28727e" processor="ee:transform" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="unauthorised" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="3ab0c3b3-f1cc-45cd-8ea2-4e9dc39d9318" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	
</munit:test>
		<munit:test name="post:\flights\bookFlights-INternalServerError" doc:id="d5276709-0993-45cf-a577-9187162b085a" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="b7776849-d276-4734-aee8-2e00ab6f0859" >
				<munit:payload value='{&#10;&#10;    "username" : "8121134971",&#10;&#10;    "password" : "Apisero@123",&#10;&#10;    "flightID" : "1",&#10;&#10;    "seats" : "3"&#10;&#10;}' encoding="UTF-8" mediaType="application/json" />

			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="5fe6a442-166d-436d-95d3-29904e292e33" processor="b39-bmh-db-system:get-by-mobile">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get by mobile" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4f0252cf-eb0a-4179-9347-2c8bb4c53ad7" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="B39_BMH_DB_System_Config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="#[payload.password]" attributeName="password" />
					<munit-tools:with-attribute whereValue="#[payload.username]" attributeName="mobile" />
					<munit-tools:with-attribute whereValue="user" attributeName="target" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="B39-BMH-DB-SYSTEM:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\flights\bookFlights:application\json:b39-book-my-holiday-api-config" doc:id="cd59e092-0c38-48c6-822d-2fa70ecdcabf" name="post:\flights\bookFlights:application\json:b39-book-my-holiday-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="0384e01a-1c03-419e-baa4-65c8eb47f948" processor="ee:transform" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="internal error" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="81c1a59a-dc4a-481f-ada5-ec0e5762f90e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	
</munit:test>
	<munit:test name="post-flights\bookFlights-positive-case" doc:id="890ddb6e-2a5d-4914-845c-be3190820e73" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get by mobile" doc:id="a9cf868f-6871-4e09-822b-af80beedfbc6" processor="b39-bmh-db-system:get-by-mobile">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4f0252cf-eb0a-4179-9347-2c8bb4c53ad7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postflightsbookFlightspositivecase\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://postflightsbookFlightspositivecase\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postflightsbookFlightspositivecase\mock_variable_.dwl')]" />
						<munit-tools:variable key="user" value="#[output application/json --- readUrl('classpath://postflightsbookFlightspositivecase\mock_variable_1.dwl')]" mediaType="application/json" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="e6cb7475-ee92-4371-8181-c76eb30bbbd5" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="84358305-9640-465f-9c12-d132210f7e2a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://postflightsbookFlightspositivecase\mock_payload1.dwl')]" mediaType="application/json" />
					<munit-tools:attributes value="#[readUrl('classpath://postflightsbookFlightspositivecase\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postflightsbookFlightspositivecase\mock_variable_2.dwl')]" />
						<munit-tools:variable key="user" value="#[output application/json --- readUrl('classpath://postflightsbookFlightspositivecase\mock_variable_3.dwl')]" mediaType="application/json" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="061b6495-d519-451f-8b14-2afe10fcfe5f" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postflightsbookFlightspositivecase\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postflightsbookFlightspositivecase\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postflightsbookFlightspositivecase\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\flights\bookFlights:application\json:b39-book-my-holiday-api-config" doc:id="31077bd8-963c-4a5f-b9cf-ea78810bc9fb" name="post:\flights\bookFlights:application\json:b39-book-my-holiday-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4f14126e-17b7-4452-81a5-698e46539819" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postflightsbookFlightspositivecase::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
