<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="post-bookCabs.xml" />
	<munit:test name="cabs\bookCabs-unauthorized_error" doc:id="a4b1cc86-260d-4b45-a9cd-da5092f61cb6" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="2c0207cd-b4e8-4549-b62a-f6dc454f5d2a" >
				<munit:payload value='{&#10;    "username" : "8121134970",&#10;    "password" : "Apisero@13",&#10;    "cabID" : "1"&#10;}' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="70c9a4b4-0c3b-461e-ab74-a1101cf1cc18" processor="b39-bmh-db-system:get-by-mobile">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get by mobile" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="5c8ac749-4e0d-4947-ac85-835920b146ca" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="B39_BMH_DB_System_Config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="#[payload.password]" attributeName="password" />
					<munit-tools:with-attribute whereValue="#[payload.username]" attributeName="mobile" />
					<munit-tools:with-attribute whereValue="user" attributeName="target" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="B39-BMH-DB-SYSTEM:UNAUTHORIZED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\cabs\bookCabs:application\json:b39-book-my-holiday-api-config" doc:id="e2dafa5d-5cc9-4382-b821-c77ba5e3d63b" name="post:\cabs\bookCabs:application\json:b39-book-my-holiday-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="916f8e0a-aca0-4803-b30b-092358ed0eec" processor="ee:transform" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="unauthorised" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="4c86aab8-9676-4775-b67a-b4158e3c99dc" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

	<munit:test name="cabs\bookCabs-Internal_server_error" doc:id="062bb600-f3d8-451e-8232-00e467f1afba" description="Test">
		<munit:behavior >
			<munit:set-event doc:name="Set Event" doc:id="722ee45f-b0f2-4d81-a9df-5485d9d2503b" >
				<munit:payload value='{
&#10;    "username" : "8121134971",
&#10;    "password" : "Apisero@123",
&#10;    "cabID" : "1"
&#10;}' encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<munit-tools:mock-when doc:name="Mock when" doc:id="49a01eb7-b5e8-4143-ab8b-7e7f4f0b2549" processor="b39-bmh-db-system:get-by-mobile">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get by mobile" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="5c8ac749-4e0d-4947-ac85-835920b146ca" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="B39_BMH_DB_System_Config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="#[payload.password]" attributeName="password" />
					<munit-tools:with-attribute whereValue="#[payload.username]" attributeName="mobile" />
					<munit-tools:with-attribute whereValue="user" attributeName="target" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="B39-BMH-DB-SYSTEM:INTERNAL_SERVER_ERROR" />
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\cabs\bookCabs:application\json:b39-book-my-holiday-api-config" doc:id="02bc9248-f977-4dc7-a285-ce321c8a4fb2" name="post:\cabs\bookCabs:application\json:b39-book-my-holiday-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="47c5d43f-0df9-4c25-a6ee-3ff120b10565" processor="ee:transform" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="internal error" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="20ba2fa4-e9d2-4716-9eb2-87ac5864e394" attributeName="doc:id" />
				</munit-tools:with-attributes>

			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	
	<munit:test name="\cabs\bookCabs-positive-case" doc:id="fc14c1f0-9060-4b5c-8106-95464a470cba" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Get by mobile" doc:id="abf735ed-a5a5-49bd-a5d7-2b3bc29ea88a" processor="b39-bmh-db-system:get-by-mobile">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5c8ac749-4e0d-4947-ac85-835920b146ca" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://cabsbookCabspositivecase\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://cabsbookCabspositivecase\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://cabsbookCabspositivecase\mock_variable_.dwl')]" />
						<munit-tools:variable key="user" value="#[output application/json --- readUrl('classpath://cabsbookCabspositivecase\mock_variable_1.dwl')]" mediaType="application/json" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Flow Reference" doc:id="f3049669-d26f-4cc7-9ae9-ad8b8f9fa1f1" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="556ab374-09b5-4741-a2f5-de3337d998e7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://cabsbookCabspositivecase\mock_payload1.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://cabsbookCabspositivecase\mock_variable_2.dwl')]" />
						<munit-tools:variable key="user" value="#[output application/json --- readUrl('classpath://cabsbookCabspositivecase\mock_variable_3.dwl')]" mediaType="application/json" />
						<munit-tools:variable key="cabId" value="#[output application/json --- readUrl('classpath://cabsbookCabspositivecase\mock_variable_4.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="32e877b8-b632-4d7c-85f9-b857e68d65bf" >
				<munit:payload value="#[output application/json --- readUrl('classpath://cabsbookCabspositivecase\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://cabsbookCabspositivecase\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://cabsbookCabspositivecase\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\cabs\bookCabs:application\json:b39-book-my-holiday-api-config" doc:id="f3f36e85-eacb-4882-9f79-390b929de181" name="post:\cabs\bookCabs:application\json:b39-book-my-holiday-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a843a713-e9a2-4684-8861-b5d586782808" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import cabsbookCabspositivecase::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	
</mule>
